"use strict";((t,i)=>{"object"==typeof module&&module.exports&&(module.exports=i())||"function"==typeof define&&define.amd&&define(i)||(t.CanvasParticles=i())})("undefined"!=typeof self?self:this,(()=>class{static version="3.4.2";constructor(t,i={}){if("string"!=typeof t)throw new TypeError("selector is not a string");if(this.canvas=document.querySelector(t),!(this.canvas instanceof HTMLCanvasElement))throw new Error("selector does not point to a canvas");this.ctx=this.canvas.getContext("2d"),this.animating=!1,this.particles=[],this.setOptions(i),window.addEventListener("resize",this.#t),this.#t(),window.addEventListener("mousemove",this.#i),window.addEventListener("scroll",this.#i)}#i=t=>{if(!this.animating)return;t instanceof MouseEvent&&(this.clientX=t.clientX,this.clientY=t.clientY);const{left:i,top:s}=this.canvas.getBoundingClientRect();this.mouseX=this.clientX-i,this.mouseY=this.clientY-s};#t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.mouseX=1/0,this.mouseY=1/0,this.updateCount=1/0,this.width=this.canvas.width+2*this.options.particles.connectDist,this.height=this.canvas.height+2*this.options.particles.connectDist,this.offX=(this.canvas.width-this.width)/2,this.offY=(this.canvas.height-this.height)/2,this.options.resetOnResize||0===this.particles.length?this.newParticles():this.matchParticleCount(),this.#s()};#e=()=>{const t=~~(this.options.particles.ppm*this.width*this.height/1e6);if(this.particleCount=Math.min(this.options.particles.max,t),!isFinite(this.particleCount))throw new RangeError("number of particles must be finite. (options.particles.ppm)")};newParticles=()=>{this.#e(),this.particles=[];for(let t=0;t<this.particleCount;t++)this.createParticle()};matchParticleCount=()=>{for(this.#e(),this.particles=this.particles.slice(0,this.particleCount);this.particleCount>this.particles.length;)this.createParticle()};createParticle=(t,i,s,e,o)=>{o=o||.5+Math.random()**5*2*this.options.particles.relSize,this.particles.push({posX:t-this.offX||Math.random()*this.width,posY:i-this.offY||Math.random()*this.height,x:t,y:i,velX:0,velY:0,offX:0,offY:0,dir:s||2*Math.random()*Math.PI,speed:e||(.5+.5*Math.random())*this.options.particles.relSpeed,size:o}),this.#s()};#s=()=>{this.particles.map((t=>t.bounds={top:-t.size,right:this.canvas.width+t.size,bottom:this.canvas.height+t.size,left:-t.size}))};#o=()=>{const t=0!==this.options.gravity.repulsive,i=0!==this.options.gravity.pulling;if(t||i){const t=this.particleCount,s=this.options.particles.connectDist*this.options.gravity.repulsive,e=this.options.particles.connectDist*this.options.gravity.pulling,o=this.options.particles.connectDist/2,n=.1*this.options.particles.connectDist;for(let a=0;a<t;a++)for(let h=a+1;h<t;h++){const t=this.particles[a],r=this.particles[h],c=t.posX-r.posX,l=t.posY-r.posY,p=Math.sqrt(c*c+l*l);let d,f;if(p<o){d=Math.atan2(r.posY-t.posY,r.posX-t.posX),f=(1/p)**1.8;const i=Math.min(n,f*s),e=Math.cos(d)*i,o=Math.sin(d)*i;t.velX-=e,t.velY-=o,r.velX+=e,r.velY+=o}if(!i)continue;void 0===d&&(d=Math.atan2(r.posY-t.posY,r.posX-t.posX),f=(1/p)**1.8);const u=Math.min(n,f*e),m=Math.cos(d)*u,g=Math.sin(d)*u;t.velX+=m,t.velY+=g,r.velX-=m,r.velY-=g}}};#n=()=>{for(let t of this.particles){t.dir=(t.dir+Math.random()*this.options.particles.rotationSpeed*2-this.options.particles.rotationSpeed)%(2*Math.PI),t.velX*=this.options.gravity.friction,t.velY*=this.options.gravity.friction,t.posX=(t.posX+t.velX+Math.sin(t.dir)*t.speed%this.width+this.width)%this.width,t.posY=(t.posY+t.velY+Math.cos(t.dir)*t.speed%this.height+this.height)%this.height;const i=t.posX+this.offX-this.mouseX,s=t.posY+this.offY-this.mouseY;if(0!==this.options.mouse.interactionType){const e=this.options.mouse.connectDist/Math.hypot(i,s);this.options.mouse.distRatio<e?(t.offX+=(e*i-i-t.offX)/4,t.offY+=(e*s-s-t.offY)/4):(t.offX-=t.offX/4,t.offY-=t.offY/4)}t.x=t.posX+t.offX,t.y=t.posY+t.offY,2===this.options.mouse.interactionType&&(t.posX=t.x,t.posY=t.y),t.x+=this.offX,t.y+=this.offY,t.gridPos=this.#a(t),t.isVisible=1===t.gridPos.x&&1===t.gridPos.y}};#a=t=>({x:(t.x>=t.bounds.left)+(t.x>t.bounds.right),y:(t.y>=t.bounds.top)+(t.y>t.bounds.bottom)});#h(t,i){return!(!t.isVisible&&!i.isVisible)||!(t.gridPos.x===i.gridPos.x&&1!==t.gridPos.x||t.gridPos.y===i.gridPos.y&&1!==t.gridPos.y)}#r=t=>{const i={};for(let s=0;s<256;s++)i[s]=t+s.toString(16).padStart(2,"0");return i};#c=()=>{for(let t of this.particles)t.isVisible&&(t.size>1?(this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.size,0,2*Math.PI),this.ctx.fill(),this.ctx.closePath()):this.ctx.fillRect(t.x-t.size,t.y-t.size,2*t.size,2*t.size))};#l=()=>{const t=this.particleCount,i=this.options.particles.connectDist>=Math.min(this.canvas.width,this.canvas.height),s=this.options.particles.connectDist*this.options.particles.maxWork;for(let e=0;e<t;e++){let o=0;for(let n=e+1;n<t;n++){const t=this.particles[e],a=this.particles[n];if(!i&&!this.#h(t,a))continue;const h=t.x-a.x,r=t.y-a.y,c=Math.sqrt(h*h+r*r);if(!(c>this.options.particles.connectDist)){if(c>this.options.particles.connectDist/2){const t=~~(Math.min(this.options.particles.connectDist/c-1,1)*this.options.particles.opacity);this.ctx.strokeStyle=this.strokeStyleTable[t]}else this.ctx.strokeStyle=this.options.particles.colorWithAlpha;if(this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(a.x,a.y),this.ctx.stroke(),(o+=c)>=s)break}}}};#p=()=>{this.canvas.width=this.canvas.width,this.ctx.fillStyle=this.options.particles.colorWithAlpha,this.ctx.lineWidth=1,this.#c(),this.#l()};#d=()=>{this.animating&&(requestAnimationFrame((()=>this.#d())),++this.updateCount>=this.options.framesPerUpdate&&(this.updateCount=0,this.#o(),this.#n(),this.#p()))};start=()=>{this.animating||(this.animating=!0,requestAnimationFrame((()=>this.#d())))};stop=()=>{this.animating=!1,this.canvas.width=this.canvas.width};setOptions=t=>{const i=(t,i)=>isNaN(+t)?i:+t;this.options={background:t.background??!1,framesPerUpdate:i(Math.max(1,parseInt(t.framesPerUpdate)),1),resetOnResize:!!t.resetOnResize,mouse:{interactionType:i(parseInt(t.mouse?.interactionType),1),connectDistMult:i(t.mouse?.connectDistMult,2/3),distRatio:i(t.mouse?.distRatio,2/3)},particles:{color:t.particles?.color??"black",ppm:i(t.particles?.ppm,100),max:i(t.particles?.max,500),maxWork:i(Math.max(0,t.particles?.maxWork),1/0),connectDist:i(Math.max(1,t.particles?.connectDistance),150),relSpeed:i(Math.max(0,t.particles?.relSpeed),1),relSize:i(Math.max(0,t.particles?.relSize),1),rotationSpeed:i(Math.max(0,t.particles?.rotationSpeed/100),.02)},gravity:{repulsive:i(t.gravity?.repulsive,0),pulling:i(t.gravity?.pulling,0),friction:i(Math.max(0,Math.min(1,t.particles?.friction)),.8)}},this.setBackground(this.options.background),this.setMouseConnectDistMult(this.options.mouse.connectDistMult),this.setParticleColor(this.options.particles.color)};setBackground=t=>{"string"==typeof t&&(this.canvas.style.background=this.options.background=t)};setMouseConnectDistMult=t=>{this.options.mouse.connectDist=this.options.particles.connectDist*(isNaN(t)?2/3:t)};setParticleColor=t=>{this.ctx.fillStyle=t,"#"===this.ctx.fillStyle[0]?this.options.particles.opacity=255:(this.options.particles.opacity=~~(255*this.ctx.fillStyle.split(",").at(-1).slice(1,-1)),this.ctx.fillStyle=this.ctx.fillStyle.split(",").slice(0,-1).join(",")+", 1)"),this.options.particles.color=this.ctx.fillStyle,this.options.particles.colorWithAlpha=this.options.particles.color+this.options.particles.opacity.toString(16),this.strokeStyleTable=this.#r(this.options.particles.color)}}));